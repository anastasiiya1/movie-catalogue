{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport * as basicLightbox from 'basiclightbox';\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst END_POINT = '/trending/movie/week';\nconst API_KEY = '598d894135bb5dfa4bf6d8e6fe6006eb';\n\nconst selectors = {\n  container: document.querySelector('.js-movie-list'),\n  loadBtn: document.querySelector('.js-load-more'),\n  guard: document.querySelector('.js-guard'),\n};\n\n// selectors.loadBtn.addEventListener('click', loadMore);\n\nlet page = 1;\n\nlet options = {\n  root: null,\n  rootMargin: '100px',\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(handlePagination, options);\n\nfetchData(page)\n  .then(data => {\n    selectors.container.insertAdjacentHTML(\n      'beforeend',\n      createMarkup(data.results)\n    );\n\n    if (data.page < 500) {\n      observer.observe(selectors.guard);\n    }\n\n    // if (data.page < data.total_pages) {\n    //   selectors.loadBtn.classList.toggle('load-more');\n    // }\n  })\n  .catch(error => console.log(error.message));\n\nasync function fetchData(page = 1) {\n  const { data } = await axios(`${BASE_URL}${END_POINT}`, {\n    params: {\n      api_key: API_KEY,\n      page,\n    },\n  });\n  return data;\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(({ id, poster_path, original_title, release_date, vote_average }) => {\n      const fullStars = Math.floor(vote_average / 2);\n      const hasHalfStar = vote_average % 2 !== 0;\n      const emptyStars = 5 - Math.ceil(vote_average / 2);\n\n      let stars = '';\n\n      for (let i = 0; i < fullStars; i++) {\n        stars += `<use href=\"/img/rating.svg#stars-full-star\"></use>`;\n      }\n\n      if (hasHalfStar) {\n        stars += `<use href=\"/img/rating.svg#stars-half-star\"></use>`;\n      }\n\n      for (let i = 0; i < emptyStars; i++) {\n        stars += `<use href=\"/img/rating.svg#stars-empty-star\"></use>`;\n      }\n\n      return `\n            <li class='movie-card' data-id='${id}'>\n              <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt='${original_title}'>\n              <div class='movie-info'>\n                  <h2>${original_title}</h2>\n                  <p>Release date: ${release_date}</p>\n                  <p class=\"rating-container\">\n                      <svg aria-hidden=\"true\" focusable=\"false\" class=\"rating\">\n                          ${stars}\n                      </svg>\n                  </p>\n                  <span class='vote-average'>${\n                    Math.floor(vote_average * 10) / 10\n                  }</span>\n              </div>\n            </li>\n          `;\n    })\n    .join('');\n}\n\n// async function loadMore() {\n//   page += 1;\n\n//   selectors.loadBtn.disabled = true;\n\n//   try {\n//     const data = await fetchData(page);\n//     selectors.container.insertAdjacentHTML(\n//       'beforeend',\n//       createMarkup(data.results)\n//     );\n//     selectors.loadBtn.disabled = false;\n\n//     if (data.page >= 500) {\n//       selectors.loadBtn.classList.toggle('load-more');\n//     }\n//   } catch (error) {\n//     alert(error.message);\n//   }\n// }\n\nfunction handlePagination(entries, observer) {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n\n      try {\n        const movie = await fetchData(page);\n        selectors.container.insertAdjacentHTML(\n          'beforeend',\n          createMarkup(movie.results)\n        );\n\n        if (movie.page >=500){\n            observer.unobserve(entry.target)\n        }\n      } catch {\n        alert(error.message);\n      }\n    }\n  });\n}\n\nselectors.container.addEventListener('click', openCard);\n\nfunction openCard(event){\n    if(!event.currentTarget.contains('movie-card')){\n        return;\n    }\n\n}"],"names":["BASE_URL","END_POINT","API_KEY","selectors","page","options","observer","handlePagination","fetchData","data","createMarkup","error","axios","arr","id","poster_path","original_title","release_date","vote_average","fullStars","hasHalfStar","emptyStars","stars","entries","entry","movie","openCard","event"],"mappings":"svBAIA,MAAMA,EAAW,+BACXC,EAAY,uBACZC,EAAU,mCAEVC,EAAY,CAChB,UAAW,SAAS,cAAc,gBAAgB,EAClD,QAAS,SAAS,cAAc,eAAe,EAC/C,MAAO,SAAS,cAAc,WAAW,CAC3C,EAIA,IAAIC,EAAO,EAEPC,EAAU,CACZ,KAAM,KACN,WAAY,QACZ,UAAW,CACb,EAEIC,EAAW,IAAI,qBAAqBC,EAAkBF,CAAO,EAEjEG,EAAUJ,CAAI,EACX,KAAKK,GAAQ,CACZN,EAAU,UAAU,mBAClB,YACAO,EAAaD,EAAK,OAAO,CAC/B,EAEQA,EAAK,KAAO,KACdH,EAAS,QAAQH,EAAU,KAAK,CAMtC,CAAG,EACA,MAAMQ,GAAS,QAAQ,IAAIA,EAAM,OAAO,CAAC,EAE5C,eAAeH,EAAUJ,EAAO,EAAG,CACjC,KAAM,CAAE,KAAAK,CAAM,EAAG,MAAMG,EAAM,GAAGZ,CAAQ,GAAGC,CAAS,GAAI,CACtD,OAAQ,CACN,QAASC,EACT,KAAAE,CACD,CACL,CAAG,EACD,OAAOK,CACT,CAEA,SAASC,EAAaG,EAAK,CACzB,OAAOA,EACJ,IAAI,CAAC,CAAE,GAAAC,EAAI,YAAAC,EAAa,eAAAC,EAAgB,aAAAC,EAAc,aAAAC,KAAmB,CACxE,MAAMC,EAAY,KAAK,MAAMD,EAAe,CAAC,EACvCE,EAAcF,EAAe,IAAM,EACnCG,EAAa,EAAI,KAAK,KAAKH,EAAe,CAAC,EAEjD,IAAII,EAAQ,GAEZ,QAAS,EAAI,EAAG,EAAIH,EAAW,IAC7BG,GAAS,qDAGPF,IACFE,GAAS,sDAGX,QAAS,EAAI,EAAG,EAAID,EAAY,IAC9BC,GAAS,sDAGX,MAAO;AAAA,8CACiCR,CAAE;AAAA,yDACSC,CAAW,UAAUC,CAAc;AAAA;AAAA,wBAEpEA,CAAc;AAAA,qCACDC,CAAY;AAAA;AAAA;AAAA,4BAGrBK,CAAK;AAAA;AAAA;AAAA,+CAIb,KAAK,MAAMJ,EAAe,EAAE,EAAI,EACjC;AAAA;AAAA;AAAA,WAInB,CAAK,EACA,KAAK,EAAE,CACZ,CAuBA,SAASX,EAAiBgB,EAASjB,EAAU,CAC3CiB,EAAQ,QAAQ,MAAMC,GAAS,CAC7B,GAAIA,EAAM,eAAgB,CACxBpB,GAAQ,EAER,GAAI,CACF,MAAMqB,EAAQ,MAAMjB,EAAUJ,CAAI,EAClCD,EAAU,UAAU,mBAClB,YACAO,EAAae,EAAM,OAAO,CACpC,EAEYA,EAAM,MAAO,KACbnB,EAAS,UAAUkB,EAAM,MAAM,CAE3C,MAAc,CACN,MAAM,MAAM,OAAO,CACpB,CACF,CACL,CAAG,CACH,CAEArB,EAAU,UAAU,iBAAiB,QAASuB,CAAQ,EAEtD,SAASA,EAASC,EAAM,CAChBA,EAAM,cAAc,SAAS,YAAY,CAIjD"}